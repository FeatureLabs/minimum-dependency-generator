name: Integration Test
on:
  pull_request:
    types: [opened, synchronize]
  push:
    branches:
      - main
jobs:
  integration_test:
    name: integration test
    runs-on: ubuntu-latest
    steps:
      - name: Checkout repository
        uses: actions/checkout@v2
        with:
          ref: ${{ github.event.pull_request.head.ref }}
          repository: ${{ github.event.pull_request.head.repo.full_name }}
      - name: Set up python 3.7
        uses: actions/setup-python@v2
        with:
          python-version: 3.7
      - name: Install codecov and erase coverage
        run: |
          python -m pip install "$(cat test-requirements.txt | grep codecov)"
          coverage erase
      - name: Run Minimum Dependency Generator with 1 file
        id: min_dep_gen_1
        uses: ./
        with:
          requirements_paths: 'requirements.txt'
      - name: Save the output minimum test requirements
        run: printf "${{ steps.min_dep_gen_1.outputs.min_reqs }}" >> generated-min--test-reqs.txt
      - name: Verify output
        run: |
          echo "${{ steps.min_dep_gen_1.outputs.min_reqs }}" | grep -c "packaging==20.9"
          echo "${{ steps.min_dep_gen_1.outputs.min_reqs }}" | grep -c "requests==2.25.1"
          echo "${{ steps.min_dep_gen_1.outputs.min_reqs }}" | grep -c "wheel==0.36.2"
      - name: Run Minimum Dependency Generator with 2 files, no other path reference
        id: min_dep_gen_2
        uses: ./
        with:
          requirements_paths: 'test-requirements.txt requirements.txt'
      - name: Save the output minimum test and core requirements
        run: printf "${{ steps.min_dep_gen_2.outputs.min_reqs }}" >> generated-min-reqs.txt
      - name: Verify output
        run: |
          echo "${{ steps.min_dep_gen_2.outputs.min_reqs }}" | grep -c "packaging==20.9"
          echo "${{ steps.min_dep_gen_2.outputs.min_reqs }}" | grep -c "pytest==6.2.4"
          echo "${{ steps.min_dep_gen_2.outputs.min_reqs }}" | grep -c "isort==5.8.0"
          echo "${{ steps.min_dep_gen_2.outputs.min_reqs }}" | grep -c "pytest-cov==2.11.1"
      - name: Create other requirements file
        run: echo -e "-r core-requirements.txt \nnumpy>=1.13.1" > other-requirements.txt
      - name: Run Minimum Dependency Generator with 2 files, path reference
        id: min_dep_gen_3
        uses: ./
        with:
          requirements_paths: 'requirements.txt other-requirements.txt'
      - name: Verify output
        run: |
          echo "${{ steps.min_dep_gen_3.outputs.min_reqs }}" | grep -c "packaging==20.9"
          echo "${{ steps.min_dep_gen_3.outputs.min_reqs }}" | grep -c "requests==2.25.1"
          echo "${{ steps.min_dep_gen_3.outputs.min_reqs }}" | grep -c "wheel==0.36.2"
          echo "${{ steps.min_dep_gen_3.outputs.min_reqs }}" | grep -c "numpy==1.13.1"
          echo "${{ steps.min_dep_gen_3.outputs.min_reqs }}" | grep -v "-r"
          echo "${{ steps.min_dep_gen_3.outputs.min_reqs }}" | grep -v ".txt"
          echo "${{ steps.min_dep_gen_3.outputs.min_reqs }}" | grep -v "core-requirements.txt"
          echo "${{ steps.min_dep_gen_3.outputs.min_reqs }}" | grep -v "-r core-requirements.txt"

